# You'll need a .env file in the app directory if:
# - You're running node / nvm natively on your target host
# - You're using the Docker Compose rabbitmq-to-eventhub-dev.yml

# Make a copy of this file and save it to .env in the app directory of the project.
# Edit the values as needed!

# Node Environment Config
NODE_ENV=dev

# Set a log level that suits your needs.
# Supported Log Levels:
# OFF	 - nothing is logged
# FATAL - fatal errors are logged
# ERROR - errors are logged
# WARN	 - warnings are logged
# INFO	 - infos are logged
# DEBUG - debug infos are logged
# TRACE - traces are logged
# ALL   - everything is logged
logLevel=info

# EventHub Properties
eventHubName=Enter the Event Hub Name Here
eventHubConnectionString=Enter the Event Hub Connection String Here

# RMQ (AMQP) Secrets
amqpUsername=ENTER USERNAME HERE
amqpPassword"=ENTER PASSWORD HERE
amqpCACertName=ENTER THE NAME OF YOUR CA CERT FILE AND COPY IT TO CONF DIR

# RMQ (AMQP) Properties
amqpHost=""
# vhost can be left blank or no vhost.
amqpVhost=""
# leave port blank to let the library automatically choose
amqpPort=
# Which Protocol to use to connect to AMQP (amqp, amqps)
amqpProtocol="amqps"
# Name of the queue to consume from
amqpConsumeQueue=""
# Should messages be ACK after consume? This will tell RMQ to remove them from the Queue once processed.
# Note that setting ackAfterConsume to false might lead to consuming the same messages repeatedly!
ackAfterConsume=false
# How many messages to consume (0=all, otherwise enter a limit)
# Note, using a limit here with ackAfterConsume=true will lead to data loss as some messages in the
# consumebatch will be ACK even though they won't be sent out to EventHub.
consumeLimit=10

# Advanced Shovel Parameters

# ************
# Batch Mode *
# ************
# If working in batch mode, uncomment these parameters and comment the oneEach parameters
#consumeMode=batch
# AMQP Prefetch Count (the maximum number of messages sent over the channel that can be awaiting acknowledgement).
# Default is unlimited. Either comment this out for unlimited OR set a sufficiently large number to meet your needs.
#amqpPrefetch=300
# How many bytes in flight before a batch is released for consumption
#batchMaxSizeBytes=100000
# How many seconds in light before a batch is release for consumption
#batchMaxTimeMs=5000

# **************
# OneEach Mode *
# **************
# If working in oneEach mode, uncomment these parameters and comment the batch parameters
consumeMode=oneEach
# AMQP Prefetch Count (the maximum number of messages sent over the channel that can be awaiting acknowledgement).
# If using consumeLimit, set this to a number less than or equal your limit.
amqpPrefetch=10
# How many messages to consume (0=all, otherwise enter a limit)
# Should be a multiple of amqpPrefetch (which should not be set to unlimited for limiting to work).
consumeLimit=10
